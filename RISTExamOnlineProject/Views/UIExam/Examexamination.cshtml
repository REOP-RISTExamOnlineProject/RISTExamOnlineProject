
@{
    ViewData["Title"] = "Examexamination";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="element" class="bg-white container">
    <h1>Examexamination</h1>
    <div class="row">
        <div class="col-12">
            <button id="btndemo" class="btn btn-warning float-lg-none">
                <span id="demo"> เริ่มทำข้อสอบ</span>
            </button>
            <span style="font: bold 12px; color:red; display:none;" id="Massaging">
                ห้ามออกจากหน้าจอจนกว่าจะข้อสอบจบ
            </span>
        </div>
    </div>
    <hr class="m-4" />

    <div class="offset-1 col-11 table-responsive " style="overflow-y:scroll; height:80%">
        <div class="m-2" id="DivContents"></div>
    </div>
    <button class="btn btn-success text-uppercase" id="btnSubmit" disabled> Submit</button>

</div>

@*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
    Launch demo modal
</button>*@

<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">กฏการทำข้อสอบ</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                กฏการทำข้อสอบ
            </div>
            <div class="modal-footer">
                <button type="button" id="testtest" class="btn btn-secondary" data-dismiss="modal">Close</button>
               @* <button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>
    </div>
</div>






@section scripts{
    <link href="~/lib/datatables/Css/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="~/lib/datatables/Js/jquery.dataTables.min.js"></script>



    <script type="text/javascript">
        var distance;
        var myTables1;
        $(document).ready(function () {
            $('#exampleModalCenter').modal('show');
        });


        onReady(function () {




        });



            (function ($) {
                var refreshKeyPressed = false;
                var modifierPressed = false;

                var f5key = 116;
                var rkey = 82;
                var modkey = [17, 224, 91, 93,27];

                // Check for refresh keys
                $(document).bind(
                    'keydown',
                    function (evt) {
                        // Check for refresh
                        if (evt.which == f5key || window.modifierPressed && evt.which == rkey   ) {
                            refreshKeyPressed = true;
                        }
                        // Check for modifier
                        if (modkey.indexOf(evt.which) >= 0) {
                            modifierPressed = true;
                        }
                    }
                );
                // Check for refresh keys
                $(document).bind(
                    'keyup',
                    function (evt) {
                        // Check undo keys
                        if (evt.which == f5key || evt.which == rkey) {
                            refreshKeyPressed = false;
                        }

                        // Check for modifier
                        if (modkey.indexOf(evt.which) >= 0) {
                            modifierPressed = false;
                        }
                    }
                );

                $(window).bind('beforeunload', function (event) {
                    var message = "not refreshed";

                    if (refreshKeyPressed) {
                        message = "refreshed";
                    }

                    event.returnValue = message;
                    return message;
                });
            }(jQuery));

        document.addEventListener("keydown", function (e) {
            //tab keyCode===9
            //I hope to prevent alt+tab event action in windows
            if (e.altKey && e.keyCode === 9) {
                e.preventDefault(); //why not come in?
            }
        }, false)


        function onReady(callback) {
            var intervalId = window.setInterval(function () {
                if (document.getElementsByTagName('body')[0] !== undefined) {
                    window.clearInterval(intervalId);
                    callback.call(this);
                }
            }, 1000);
        }


        function GetData() {
              $.ajax({
                type: 'POST',
                  url: "../UIExam/GetExamList",
                  data: { itemCateg: "@ViewBag.Itemcateg", InputItem : "@ViewBag.InputItem" },
                  dataType: 'json',
                  success: function (Data) {
                      $("#DivContents").html(Data._strResult);
                      Gettime(5);
                      $("#btndemo").attr("disabled", 'disabled');
                      $("#btnSubmit").removeAttr("disabled", 'disabled');

                  },
                  error: function (ex) {

                  },
                });
        }





        var x
        function Gettime(strTime) {
            // Set the date we're counting down to

            var now = new Date();
            now.setMinutes(now.getMinutes() + strTime); // timestamp
            now = new Date(now);

            var countDownDate = new Date(now).getTime();

            // Update the count down every 1 second
            x = setInterval(function () {

                // Get today's date and time
                var now = new Date().getTime();

                // Find the distance between now and the count down date
                  distance = countDownDate - now;

                // Time calculations for days, hours, minutes and seconds
                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                // Display the result in the element with id="demo"
                document.getElementById("demo").innerHTML = days + "d " + hours + "h "
                    + minutes + "m " + seconds + "s ";
              
                // If the count down is finished, write some text
                if (distance < 0) {
                    clearInterval(x);
                    document.getElementById("demo").innerHTML = "EXPIRED";
                    $("#DivContents").html("");


                    Swal.fire({
                        icon: 'warning',
                        title: 'TIME OUT!!',
                        type: 'error',
                        timer: 1700,
                    }).then(function () {

                        return true;
                    });
                }
            }, 1000);


         
        }





        /* Get into full screen */
            function GoInFullscreen(element) {

            if (element.requestFullscreen)
                element.requestFullscreen();
            else if (element.mozRequestFullScreen)
                element.mozRequestFullScreen();
            else if (element.webkitRequestFullscreen)
                element.webkitRequestFullscreen();
            else if (element.msRequestFullscreen)
                element.msRequestFullscreen();
        }

        /* Get out of full screen */
        function GoOutFullscreen() {
            if (document.exitFullscreen)
                document.exitFullscreen();
            else if (document.mozCancelFullScreen)
                document.mozCancelFullScreen();
            else if (document.webkitExitFullscreen)
                document.webkitExitFullscreen();
            else if (document.msExitFullscreen)
                document.msExitFullscreen();

        }

        /* Is currently in full screen or not */
        function IsFullScreenCurrently() {
            var full_screen_element = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement || null;

            // If no element is in full-screen
            if (full_screen_element === null)
                return false;
            else
                return true;
        }
        $("#testtest").on("click", function () {

            if (IsFullScreenCurrently()) {
                GoOutFullscreen();

            } else {
                GoInFullscreen($("#element").get(0));
                GetData();
                $("#Massaging").css("display", "block");
            }
        });
        window.onbeforeunload = function () {
            alert( 'Are you sure you want to leave?');
        };


        $(document).on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function () {
            if (IsFullScreenCurrently()) {
                return false;
            }
            else { 
                clearInterval(x);
                alert('End exam');
               
                $("#DivContents").html("<div class='text-center'><H1 class='text-danger'>TEST END</H1><H1 class='text-danger'><i class='fas fa-check-circle'></i></H1></div>");
                return false;
            }
        });


    </script>
} 